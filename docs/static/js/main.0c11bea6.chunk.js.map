{"version":3,"sources":["reportWebVitals.js","componets/AddCategory.js","componets/GifGridItem.js","helpers/getGifs.js","componets/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AddCategory","setCategories","useState","value","setValue","onSubmit","e","preventDefault","c","type","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","response","json","data","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"8KAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qBCwBCQ,EA5BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACbC,mBAAS,IADI,mBAChCC,EADgC,KACzBC,EADyB,KAavC,OACI,sBAAMC,SAPW,SAACC,GACpBA,EAAEC,iBACFN,GAAc,SAAAO,GAAC,OAAKL,GAAL,mBAAeK,OAC9BJ,EAAS,KAIP,SACE,uBACIK,KAAK,OACLN,MAAOA,EACPO,SAfgB,SAACJ,GACzBF,EAASE,EAAEK,OAAOR,a,QCPTS,EAAc,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAClC,OACI,sBAAKC,UAAU,0CAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCHCK,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACfN,EADe,iDACiCO,UAAUF,GAD3C,8DAEEG,MAAMR,GAFR,cAEfS,EAFe,gBAGAA,EAASC,OAHT,uBAGdC,EAHc,EAGdA,KAHc,kBAKdA,EAAKC,KAAI,SAAAC,GAAQ,IAAD,EACrB,MAAO,CACLC,GAAID,EAAIC,GACRf,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIE,cAAN,aAAE,EAAYC,iBAAiBhB,SATjB,2CAAH,sDCEPiB,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACdjB,mBAAS,CACjCuB,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAU,WACRjB,EAAQC,GACHzB,MAAK,SAAAiC,GAAG,OAAIO,EAAS,CACpBT,KAAME,EACNK,SAAS,SAEd,CAACb,IAEGc,EDZyBG,CAAajB,GAAhCU,EAFwB,EAE9BJ,KAAcO,EAFgB,EAEhBA,QAErB,OACI,qCACE,6BAAKb,IACJa,GAAW,mBAAGjB,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAEIc,EAAOH,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEOrCS,EAhBM,WAAO,IAAD,EACWnC,mBAAS,CAAC,cADrB,mBAClBoC,EADkB,KACNrC,EADM,KAGzB,OACI,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGIqC,EAAWZ,KAAI,SAAAP,GAAQ,OAAI,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,U,YCNrDoB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAG1BnD,M","file":"static/js/main.0c11bea6.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {useState} from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst AddCategory = ({setCategories}) => {\n  const [value, setValue] = useState('')\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setCategories(c => [value, ...c]);\n    setValue('');\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n        <input\n            type=\"text\"\n            value={value}\n            onChange={handleInputChange}\n        />\n      </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;\n","export const GifGridItem = ({title, url}) => {\n  return (\n      <div className=\"card animate__animated animate__flipInX\">\n        <img src={url} alt={title} />\n        <p>{title}</p>\n      </div>\n  );\n};\n","\nexport const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=Iu3TLLKg31L0XgL1hksgF4nZxsZkNmN5`;\n  const response = await fetch(url);\n  const {data} = await response.json();\n\n  return data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  });\n};\n","import {GifGridItem} from \"./GifGridItem\";\nimport {useFetchGifs} from \"../hooks/useFetchGifs\";\n\nexport const GifGrid = ({category}) => {\n\n  const {data: images, loading} = useFetchGifs(category);\n\n  return (\n      <>\n        <h3>{category}</h3>\n        {loading && <p className=\"animate__animated animate__flash\">loading...</p>}\n        <div className=\"card-grid\">\n          {\n            images.map(img => <GifGridItem key={img.id} {...img} />)\n          }\n        </div>\n      </>\n  );\n};\n","import {useEffect, useState} from \"react\";\nimport {getGifs} from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n\n  useEffect(() => {\n    getGifs(category)\n        .then(img => setState({\n          data: img,\n          loading: false\n        }));\n  }, [category]);\n\n  return state;\n};\n","import {useState} from \"react\";\nimport AddCategory from \"./componets/AddCategory\";\nimport {GifGrid} from \"./componets/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['star wars']);\n\n  return (\n      <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={setCategories} />\n        <hr/>\n\n          {\n            categories.map(category => <GifGrid key={category} category={category} />)\n          }\n      </>\n  );\n};\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport GifExpertApp from \"./GifExpertApp\";\n\nimport './index.css';\nimport 'animate.css'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}